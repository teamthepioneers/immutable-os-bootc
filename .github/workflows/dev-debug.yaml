name: "Workflow for Development & Debugging"
run-name: "Dev & Debug Workflow - ${{ github.ref }}"

on:
  workflow_dispatch:
    inputs:
      runner-group:
        description: 'Type the runner group'
        required: true
        default: 'Default'
        type: string
      runner-label:
        description: 'Type label of runner'
        required: true
        default: 'x64'
        type: string
      oci_registry:
        description: 'Type the OCI registry you want to use. e.g. `ghcr.io`, `quay.io`,`docker.io`'
        required: true
        default: 'quay.io'
        type: string
      oci_image_repo_path:
        description: 'Type the image repository path in OCI registry you want to push (`{tenancy-namespace}/{repo-name}`)'
        required: true
        default: 'user/my-repo'
        type: string
      oci_image_tag:
        description: 'Type the image tag you want to use'
        required: true
        default: 'latest'
        type: string
      default_disk:
        description: 'Type disk name you want to use as rootfs (e.g `sda`, `nvme0n1`)'
        required: true
        default: 'sda'
        type: string
      disk_format:
        description: 'Type the disk format you want to convert the OCI image into (e.g. `qcow2`, `iso`, `raw`)'
        required: true
        default: 'iso'
        type: string
      

jobs:
  build-oci-image:
    outputs:
      full-oci-tag: ${{ steps.define_full_oci_tag.outputs.full-oci-tag }}
    runs-on:
      group: ${{ inputs.runner-group }}
      labels:
        - ${{ inputs.runner-label }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to OCI Registry
        run: |
          podman login -u=${{ secrets.OCI_REGISTRY_BOT_USERNAME }} -p=${{ secrets.OCI_REGISTRY_BOT_PASSWORD }} ${{ inputs.oci_registry }}

      - name: Define full path of repository
        id: define_full_oci_tag
        run: |
          echo "full-oci-tag=${{ inputs.oci_registry }}/${{ inputs.oci_image_repo_path }}:${{ inputs.oci_image_tag }}" | tee -a $GITHUB_OUTPUT

      - name: Build OCI image
        run: |
          podman build -t ${{ steps.define_full_oci_tag.outputs.full-oci-tag }} .

      - name: Push OCI image to registry
        run: |
          podman push ${{ steps.define_full_oci_tag.outputs.full-oci-tag }}    

  build-os-image:
    needs: build-oci-image
    runs-on:
      group: ${{ inputs.runner-group }}
      labels:
        - ${{ inputs.runner-label }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to OCI Registry
        run: |
          podman login -u=${{ secrets.OCI_REGISTRY_BOT_USERNAME }} -p=${{ secrets.OCI_REGISTRY_BOT_PASSWORD }} ${{ inputs.oci_registry }}

      - name: Pull OCI image
        run: |
          sudo podman pull ${{ needs.build-oci-image.outputs.full-oci-tag }}

      - name: Configure kickstart
        run: |
          sed -i "s|{{ inputs.default_disk }}|${{ inputs.default_disk }}|g" config.toml
          sed -i "s|{{ secret.DEFAULT_USER_NAME }}|${{ secrets.DEFAULT_USER_NAME }}|g" config.toml
          sed -i "s|{{ secret.DEFAULT_USER_PASSWD }}|${{ secrets.DEFAULT_USER_PASSWD }}|g" config.toml

      - name: Convert OCI image into specified disk format
        run: |
          sudo podman run --rm \
            --privileged \
            --security-opt label=type:unconfined_t \
            -v ./image-builder-output:/output \
            -v /var/lib/containers/storage:/var/lib/containers/storage \
            quay.io/centos-bootc/bootc-image-builder@sha256:ba8c4bee758b4b816ce0c3a605f55389412edab034918f56982e7893e0b08532 \
            --type ${{ inputs.disk_format }} \
            --use-librepo=True \
            --rootfs btrfs \
            ${{ needs.build-oci-image.outputs.full-oci-tag }}

      - name: Save disk format image
        run: |
          sudo cp -rf ./image-builder-output /opt/
          sudo rm -rf ./image-builder-output
