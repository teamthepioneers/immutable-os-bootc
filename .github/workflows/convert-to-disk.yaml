name: "Convert OCI Container to Disk Image"
run-name: "Build bootc - ${{ github.ref }}"

on:
  workflow_dispatch:
    inputs:
      runner-group:
        description: 'Type the runner group'
        required: true
        default: 'Default'
        type: string
      runner-label:
        description: 'Type label of runner'
        required: true
        default: 'x64'
        type: string
      oci_registry:
        description: 'Type the OCI registry you want to use. e.g. `ghcr.io`, `quay.io`,`docker.io`'
        required: true
        default: 'quay.io'
        type: string
      oci_image_repo_path:
        description: 'Type the image repository path in OCI registry you want to push (`{tenancy-namespace}/{repo-name}`)'
        required: true
        default: 'user/my-repo'
        type: string
      oci_image_tag:
        description: 'Type the image tag you want to use'
        required: true
        default: 'latest'
        type: string
      default_disk:
        description: 'Type disk name you want to use as rootfs (e.g `sda`, `nvme0n1`)'
        required: true
        default: 'sda'
        type: string
      disk_format:
        description: 'Type the disk format you want to convert the OCI image into (e.g. `qcow2`, `iso`, `raw`)'
        required: true
        default: 'iso'
        type: string

jobs:
  convert-to-disk-image:
    runs-on:
      group: ${{ inputs.runner-group }}
      labels:
        - ${{ inputs.runner-label }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to OCI Registry
        run: |
          sudo podman login -u=${{ secrets.OCI_REGISTRY_BOT_USERNAME }} -p=${{ secrets.OCI_REGISTRY_BOT_PASSWORD }} ${{ inputs.oci_registry }}

      - name: Pull OCI image
        run: |
          sudo podman pull ${{ inputs.oci_registry }}/${{ inputs.oci_image_repo_path }}:${{ inputs.oci_image_tag }}

      - name: Configure kickstart
        run: |
          sed -i "s|{{ inputs.default_disk }}|${DEFAULT_DISK}|g" config.toml
          sed -i "s|{{ secret.DEFAULT_USER_NAME }}|${DEFAULT_USER_NAME}|g" config.toml
          sed -i "s|{{ secret.DEFAULT_USER_PASSWD }}|${DEFAULT_USER_PASSWD}|g" config.toml
        env:
          DEFAULT_DISK: ${{ inputs.default_disk }}
          DEFAULT_USER_NAME: ${{ secrets.DEFAULT_USER_NAME }}
          DEFAULT_USER_PASSWD: ${{ secrets.DEFAULT_USER_PASSWD }}

      - name: Convert OCI image into specified disk format
        run: |
          sudo podman run --rm \
            --privileged \
            --security-opt label=type:unconfined_t \
            -v ./image-builder-output:/output \
            -v ./config.toml:/config.toml:ro \
            -v /var/lib/containers/storage:/var/lib/containers/storage \
            quay.io/centos-bootc/bootc-image-builder@sha256:ba8c4bee758b4b816ce0c3a605f55389412edab034918f56982e7893e0b08532 \
            --type ${{ inputs.disk_format }} \
            --use-librepo=True \
            --rootfs btrfs \
            ${{ inputs.oci_registry }}/${{ inputs.oci_image_repo_path }}:${{ inputs.oci_image_tag }}

      - name: Save disk format image
        run: |
          sudo cp -rf ./image-builder-output /opt/
          sudo rm -rf ./image-builder-output
