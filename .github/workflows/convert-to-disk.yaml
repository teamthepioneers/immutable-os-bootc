name: "Convert OCI Container to Disk Image"
run-name: "Build bootc - ${{ github.ref }}"

on:
  workflow_dispatch:
    inputs:
      runner-group:
        description: 'Type the runner group'
        required: true
        default: 'private-runners-yuntae'
        type: string
      runner-label:
        description: 'Type label of runner'
        required: true
        default: 'ytminipc001'
        type: string
      oci_registry:
        description: 'Type the OCI registry you want to use. e.g. `ghcr.io`, `quay.io`,`docker.io`'
        required: true
        default: 'quay.io'
        type: string
      oci_image_repo:
        description: 'Type the image repository path in OCI registry you want to push (`{tenancy-namespace}/{repo-name}`)'
        required: true
        default: 'teamthepioneers/immutable-os-bootc'
        type: string
      oci_image_tag:
        description: 'Type the image tag you want to use'
        required: true
        default: 'latest'
        type: string
      default_disk:
        description: 'Type disk name you want to use as rootfs (e.g `sda`, `nvme0n1`)'
        required: true
        default: 'sda'
        type: string
      disk_format:
        description: 'Type the disk format you want to convert the OCI image into (e.g. `qcow2`, `iso`, `raw`)'
        required: true
        default: 'iso'
        type: string
      rootfs:
        description: 'Type the root filesystem you want to use (e.g. `ext4`, `xfs`, `btrfs`)'
        required: false
        default: 'btrfs'
        type: string

jobs:
  convert-to-disk-image:
    runs-on:
      group: ${{ inputs.runner-group }}
      labels:
        - ${{ inputs.runner-label }}

    steps:
      - name: Check requirements
        run: |
          make --version &> /dev/null || { echo "Make is not installed"; exit 1; }
          sudo podman --version &> /dev/null || { echo "no podman or no permission to run podman in root"; exit 1; }

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to OCI Registry
        run: |
          sudo podman login -u=${{ secrets.OCI_REGISTRY_BOT_USERNAME }} -p=${{ secrets.OCI_REGISTRY_BOT_PASSWORD }} ${{ inputs.oci_registry }}

      - name: Pull OCI image
        id: pull-oci-image
        run: |
          full_image_tag='${{ inputs.oci_registry }}/${{ inputs.oci_image_repo }}:${{ inputs.oci_image_tag }}'
          echo "full_image_tag=${full_image_tag}" | tee -a $GITHUB_OUTPUT
          sudo podman pull ${full_image_tag}

      - name: Configure kickstart
        run: |
          sed -i "s|{{ inputs.default_disk }}|${DEFAULT_DISK}|g" config.toml
          sed -i "s|{{ secret.DEFAULT_USER_NAME }}|${DEFAULT_USER_NAME}|g" config.toml
          sed -i "s|{{ secret.DEFAULT_USER_PASSWD }}|${DEFAULT_USER_PASSWD}|g" config.toml
        env:
          DEFAULT_DISK: ${{ inputs.default_disk }}
          DEFAULT_USER_NAME: ${{ secrets.DEFAULT_USER_NAME }}
          DEFAULT_USER_PASSWD: ${{ secrets.DEFAULT_USER_PASSWD }}

      - name: Convert OCI image into specified disk format
        run: |
          echo "::group::Convert OCI image into specified disk format:"
          make convert-to-disk-image
          echo "::endgroup::"
        env:
          OCI_REGISTRY: ${{ inputs.oci_registry }}
          OCI_IMAGE_REPO: ${{ inputs.oci_image_repo }}
          OCI_IMAGE_TAG: ${{ inputs.oci_image_tag }}
          DISK_FORMAT: ${{ inputs.disk_format }}
          ROOTFS: ${{ inputs.rootfs }}

      - name: Save disk format image
        run: |
          sudo chown -R $USER:$USER ./image-builder-output
          IMAGE_DIGEST=$(sudo podman inspect ${full_image_tag} -f json | \
            jq -r .[0].Digest | cut -d ':' -f2)
          sudo mkdir -p /opt/bootc-os-disk-images/${IMAGE_DIGEST:0:12}
          sudo mv image-builder-output /opt/bootc-os-disk-images/${IMAGE_DIGEST:0:12}/${{ inputs.disk_format }}
          sudo rm -rf ./image-builder-output
        env:
          full_image_tag: ${{ steps.pull-oci-image.outputs.full_image_tag }}
